LinkedBlockingDeque类
LinkedBlockingDeque是一个阻塞的线程安全的列表。

阻塞列表和非阻塞列表的区别
阻塞列表与非阻塞列表的主要区别是，阻塞列表有添加和删除元素的方法，如果由于列表已满或为空而导致这些操作不能立即进行，它们将阻塞调用的线程，直到这些操作可以进行。

创建固定大小的阻塞列表
LinkedBlockingDeque list=new LinkedBlockingDeque(3);

添加元素
list.put(string);

获取元素
list.take();

put()
添加字符串到列表中。如果列表已满（因为你已使用固定大小来创建它），这个方法阻塞线程的执行，直到列表有可用空间。如果在阻塞时被中断，将抛出InterruptedException异常。

take()
从列表中获取字符串，如果列表为空，这个方法将阻塞线程的执行，直到列表中有元素。如果在阻塞时被中断，将抛出InterruptedException异常。

takeFirst()、takeLast()
分别返回列表的第一个和最后一个元素。它们从列表删除返回的元素。如果列表为空，这些方法将阻塞线程，直到列表有元素。

getFirst()、getLast()
返回列表的第一个和最后一个元素。它们不会从列表删除返回的元素。如果列表为空，这些方法将抛出NoSuchElementException异常。

peek()、peekFirst()、peekLast()
分别返回列表的第一个和最后一个元素。它们不会从列表删除返回的元素。如果列表为空，这些方法将返回null值。

poll()、pollFirst()、pollLast()
分别返回列表的第一个和最后一个元素。它们从列表删除返回的元素。如果列表为空，这些方法将返回null值。

add()、 addFirst()、addLast()
分别在第一个位置和最后一个位置上添加元素。如果列表已满（你已使用固定大小创建它），这些方法将抛出IllegalStateException异常。
