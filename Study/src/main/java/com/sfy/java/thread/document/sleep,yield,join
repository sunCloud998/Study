线程休眠暂停等方法的使用
sleep方法：
当你调用sleep()方法， Thread 离开CPU并在一段时间内停止运行。在这段时间内，它是不消耗CPU时间的，CPU可以执行其他任务。
yield方法：
yield() 方法也能让线程对象离开 CPU, 它向JVM表示线程对象可以让CPU执行其他任务。JVM 不保证它会遵守请求。通常，它只是用来试调的。
join方法：
当前线程调用某个线程的join()方法时，它会暂停当前线程，直到被调用线程执行完成。

守护线程
这种线程的优先级非常低，通常在程序里没有其他线程运行时才会执行它。当守护线程是程序里唯一在运行的线程时，JVM会结束守护线程并终止程序。JAVA中最典型的这种类型代表就是垃圾回收器。
不能用守护线程来做重要的任务，因为我们不知道什么时候会被分配到CPU时间片，并且只要没有其他线程在运行，它们可能随时被终止。
设置线程为守护线程：setDaemon(true);
只能在start() 方法之前可以调用 setDaemon() 方法。一旦线程运行了，就不能修改守护状态。
可以使用 isDaemon() 方法来检查线程是否是守护线程（方法返回 true) 或者是使用者线程 (方法返回 false)。
